// Code generated by goctl. DO NOT EDIT.
// Source: bllknowledge.proto

package bllknowledgeservice

import (
	"context"

	"jxzy/bll/bll_knowledge/bll_knowledge"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddVectorKnowledgeRequest     = bll_knowledge.AddVectorKnowledgeRequest
	AddVectorKnowledgeResponse    = bll_knowledge.AddVectorKnowledgeResponse
	DeleteVectorKnowledgeRequest  = bll_knowledge.DeleteVectorKnowledgeRequest
	DeleteVectorKnowledgeResponse = bll_knowledge.DeleteVectorKnowledgeResponse

	BllKnowledgeService interface {
		// 添加知识库到向量数据库
		AddVectorKnowledge(ctx context.Context, in *AddVectorKnowledgeRequest, opts ...grpc.CallOption) (*AddVectorKnowledgeResponse, error)
		// 从向量数据库删除知识库
		DeleteVectorKnowledge(ctx context.Context, in *DeleteVectorKnowledgeRequest, opts ...grpc.CallOption) (*DeleteVectorKnowledgeResponse, error)
	}

	defaultBllKnowledgeService struct {
		cli zrpc.Client
	}
)

func NewBllKnowledgeService(cli zrpc.Client) BllKnowledgeService {
	return &defaultBllKnowledgeService{
		cli: cli,
	}
}

// 添加知识库到向量数据库
func (m *defaultBllKnowledgeService) AddVectorKnowledge(ctx context.Context, in *AddVectorKnowledgeRequest, opts ...grpc.CallOption) (*AddVectorKnowledgeResponse, error) {
	client := bll_knowledge.NewBllKnowledgeServiceClient(m.cli.Conn())
	return client.AddVectorKnowledge(ctx, in, opts...)
}

// 从向量数据库删除知识库
func (m *defaultBllKnowledgeService) DeleteVectorKnowledge(ctx context.Context, in *DeleteVectorKnowledgeRequest, opts ...grpc.CallOption) (*DeleteVectorKnowledgeResponse, error) {
	client := bll_knowledge.NewBllKnowledgeServiceClient(m.cli.Conn())
	return client.DeleteVectorKnowledge(ctx, in, opts...)
}
