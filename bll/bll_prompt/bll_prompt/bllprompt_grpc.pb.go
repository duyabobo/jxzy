// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package bll_prompt

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BllPromptServiceClient is the client API for BllPromptService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BllPromptServiceClient interface {
	// 占位方法，后续添加具体实现
	Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pong, error)
}

type bllPromptServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBllPromptServiceClient(cc grpc.ClientConnInterface) BllPromptServiceClient {
	return &bllPromptServiceClient{cc}
}

func (c *bllPromptServiceClient) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/bll_prompt.BllPromptService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BllPromptServiceServer is the server API for BllPromptService service.
// All implementations must embed UnimplementedBllPromptServiceServer
// for forward compatibility
type BllPromptServiceServer interface {
	// 占位方法，后续添加具体实现
	Ping(context.Context, *Empty) (*Pong, error)
	mustEmbedUnimplementedBllPromptServiceServer()
}

// UnimplementedBllPromptServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBllPromptServiceServer struct {
}

func (UnimplementedBllPromptServiceServer) Ping(context.Context, *Empty) (*Pong, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (UnimplementedBllPromptServiceServer) mustEmbedUnimplementedBllPromptServiceServer() {}

// UnsafeBllPromptServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BllPromptServiceServer will
// result in compilation errors.
type UnsafeBllPromptServiceServer interface {
	mustEmbedUnimplementedBllPromptServiceServer()
}

func RegisterBllPromptServiceServer(s grpc.ServiceRegistrar, srv BllPromptServiceServer) {
	s.RegisterService(&BllPromptService_ServiceDesc, srv)
}

func _BllPromptService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BllPromptServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bll_prompt.BllPromptService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BllPromptServiceServer).Ping(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// BllPromptService_ServiceDesc is the grpc.ServiceDesc for BllPromptService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BllPromptService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bll_prompt.BllPromptService",
	HandlerType: (*BllPromptServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _BllPromptService_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bllprompt.proto",
}
