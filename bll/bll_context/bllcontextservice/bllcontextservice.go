// Code generated by goctl. DO NOT EDIT.
// Source: bllcontext.proto

package bllcontextservice

import (
	"context"

	"jxzy/bll/bll_context/bll_context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChatRequest        = bll_context.ChatRequest
	StreamChatResponse = bll_context.StreamChatResponse
	TokenUsage         = bll_context.TokenUsage

	BllContextService interface {
		// 流式聊天接口
		StreamChat(ctx context.Context, in *ChatRequest, opts ...grpc.CallOption) (bll_context.BllContextService_StreamChatClient, error)
	}

	defaultBllContextService struct {
		cli zrpc.Client
	}
)

func NewBllContextService(cli zrpc.Client) BllContextService {
	return &defaultBllContextService{
		cli: cli,
	}
}

// 流式聊天接口
func (m *defaultBllContextService) StreamChat(ctx context.Context, in *ChatRequest, opts ...grpc.CallOption) (bll_context.BllContextService_StreamChatClient, error) {
	client := bll_context.NewBllContextServiceClient(m.cli.Conn())
	return client.StreamChat(ctx, in, opts...)
}
