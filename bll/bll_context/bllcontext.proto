syntax = "proto3";

package bll_context;

option go_package = "./bll_context";

// ====== 聊天相关消息定义 ======

message ChatRequest {
  string message = 1;                 // 用户消息内容
  string session_id = 2;              // 会话ID，为空时自动创建
  string scene_code = 3;              // 业务场景编码，必填
  string user_id = 4;                 // 用户ID
}

message StreamChatResponse {
  string session_id = 1;                 // 会话ID
  string scene_code = 2;                 // 场景编码
  string delta = 3;                      // 增量内容
  bool finished = 4;                     // 是否结束
  TokenUsage usage = 5;                  // token使用情况(仅在finished=true时返回，可选)
}

message TokenUsage {
  int64 prompt_tokens = 1;            // 输入token数
  int64 reply_tokens = 2;             // 输出token数
  int64 total_tokens = 3;             // 总token数
}

// ====== 服务定义 ======

service BllContextService {
  // 流式聊天接口
  rpc StreamChat(ChatRequest) returns (stream StreamChatResponse);
}
