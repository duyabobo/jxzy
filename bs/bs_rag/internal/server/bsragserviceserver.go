// Code generated by goctl. DO NOT EDIT.
// Source: bsrag.proto

package server

import (
	"context"

	"jxzy/bs/bs_rag/bs_rag"
	"jxzy/bs/bs_rag/internal/logic"
	"jxzy/bs/bs_rag/internal/svc"
)

type BsRagServiceServer struct {
	svcCtx *svc.ServiceContext
	bs_rag.UnimplementedBsRagServiceServer
}

func NewBsRagServiceServer(svcCtx *svc.ServiceContext) *BsRagServiceServer {
	return &BsRagServiceServer{
		svcCtx: svcCtx,
	}
}

// 向量相似度搜索
func (s *BsRagServiceServer) VectorSearch(ctx context.Context, in *bs_rag.VectorSearchRequest) (*bs_rag.VectorSearchResponse, error) {
	l := logic.NewVectorSearchLogic(ctx, s.svcCtx)
	return l.VectorSearch(in)
}

// 插入向量文档
func (s *BsRagServiceServer) VectorInsert(ctx context.Context, in *bs_rag.VectorInsertRequest) (*bs_rag.VectorInsertResponse, error) {
	l := logic.NewVectorInsertLogic(ctx, s.svcCtx)
	return l.VectorInsert(in)
}

// 删除向量文档
func (s *BsRagServiceServer) VectorDelete(ctx context.Context, in *bs_rag.VectorDeleteRequest) (*bs_rag.VectorDeleteResponse, error) {
	l := logic.NewVectorDeleteLogic(ctx, s.svcCtx)
	return l.VectorDelete(in)
}

// 获取集合信息
func (s *BsRagServiceServer) GetCollectionInfo(ctx context.Context, in *bs_rag.CollectionInfoRequest) (*bs_rag.CollectionInfoResponse, error) {
	l := logic.NewGetCollectionInfoLogic(ctx, s.svcCtx)
	return l.GetCollectionInfo(in)
}
